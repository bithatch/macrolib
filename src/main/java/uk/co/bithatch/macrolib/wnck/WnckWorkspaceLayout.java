/**
 * Java WNCK bindings
 * Copyright Â© 2020 Bithatch (tanktarta@gmail.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package uk.co.bithatch.macrolib.wnck;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Structure.FieldOrder;
import com.sun.jna.ptr.IntByReference;


/**
 * WnckWorkspaceLayout:<br>.
 *
 * {@link #rows}: number of rows in the layout grid.<br>
 * {@link #cols}: number of columns in the layout grid.<br>
 * {@link #grid}: array of size {@link #grid_area} containing the index (starting from 0) of<br>
 * the #WnckWorkspace for each position in the layout grid, or -1 if the<br>
 * position does not correspond to any #WnckWorkspace.<br>
 * {@link #grid_area}: size of the grid containing all #WnckWorkspace. This can be<br>
 * bigger than the number of #WnckWorkspace because the grid might not be<br>
 * filled.<br>
 * {@link #current_row}: row of the specific #WnckWorkspace, starting from 0.<br>
 * {@link #current_col}: column of the specific #WnckWorkspace, starting from 0.<br>
 * The #WnckWorkspaceLayout struct contains information about the layout of<br>
 * #WnckWorkspace on a #WnckScreen, and the exact position of a specific<br>
 * #WnckWorkspace.<br>
 * Since: 2.12<br>
 * Deprecated:2.20:<br>
 * <i>native declaration : libwnck/screen.h:116</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@FieldOrder({"rows", "cols", "grid", "grid_area", "current_row", "current_col"})
public class WnckWorkspaceLayout extends Structure {
	
	/**
	 * The Class ByReference.
	 */
	public static class ByReference extends WnckWorkspaceLayout implements Structure.ByReference {
		
	}
	
	/**
	 * The Class ByValue.
	 */
	public static class ByValue extends WnckWorkspaceLayout implements Structure.ByValue {
		
	}
	
	/** The cols. */
	public int cols;
	
	/** The current col. */
	public int current_col;
	
	/** The current row. */
	public int current_row;
	
	/**  C type : int*. */
	public IntByReference grid;
	
	/** The grid area. */
	public int grid_area;
	
	/** The rows. */
	public int rows;
	
	/**
	 * Instantiates a new wnck workspace layout.
	 */
	public WnckWorkspaceLayout() {
		super();
	}
	
	/**
	 * Instantiates a new wnck workspace layout.
	 *
	 * @param rows the rows
	 * @param cols the cols
	 * @param grid C type : int*
	 * @param grid_area the grid area
	 * @param current_row the current row
	 * @param current_col the current col
	 */
	public WnckWorkspaceLayout(int rows, int cols, IntByReference grid, int grid_area, int current_row, int current_col) {
		super();
		this.rows = rows;
		this.cols = cols;
		this.grid = grid;
		this.grid_area = grid_area;
		this.current_row = current_row;
		this.current_col = current_col;
	};
	
	/**
	 * Instantiates a new wnck workspace layout.
	 *
	 * @param peer the peer
	 */
	public WnckWorkspaceLayout(Pointer peer) {
		super(peer);
	};
}
